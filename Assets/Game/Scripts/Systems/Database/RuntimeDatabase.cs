///
/// This code has been auto-generated by LemonInc.Tools.Databases
///

using LemonInc.Core.Utilities;
using LemonInc.Tools.Databases.Models;
using System.Collections.Generic;
using System.Linq;
using UnityEditor;

namespace Databases
{
	public class RuntimeDatabase : Singleton<RuntimeDatabase>
{
private DatabaseData _data;
#if UNITY_EDITOR
public DatabaseData RuntimeDatabaseData => _data ??= AssetDatabase.LoadAllAssetsAtPath("Assets/Game/Resources/Runtime.asset").FirstOrDefault() as DatabaseData;
#else
public DatabaseData RuntimeDatabase => _data ??= Resources.Load<DatabaseData>("Runtime");
#endif
public static class Data
{
public static Game.Entities.Player.PlayerStatData PlayerData = (Game.Entities.Player.PlayerStatData)RuntimeDatabase.Instance.RuntimeDatabaseData.AssetDefinitions["ae9f60c8-bb58-4ed4-8926-0646c0279b0f"].Data;
public static Game.Systems.Score.ScoreData Score = (Game.Systems.Score.ScoreData)RuntimeDatabase.Instance.RuntimeDatabaseData.AssetDefinitions["02224c32-d29a-4569-a8c0-44169cdecda5"].Data;

/// <summary>
/// Gets all assets from this section.
/// </summary>
/// <returns>An <see cref="IEnumerable{T}"/> of all assets.</returns>
public static IEnumerable<T> All<T>()
   where T : UnityEngine.Object
{
   var all = new UnityEngine.Object[2] { PlayerData, Score };
   return all.OfType<T>();
}
}

public static class NewSection1Ref
{

/// <summary>
/// Gets all assets from this section.
/// </summary>
/// <returns>An <see cref="IEnumerable{T}"/> of all assets.</returns>
public static IEnumerable<T> All<T>()
   where T : UnityEngine.Object
{
   var all = new UnityEngine.Object[0] {  };
   return all.OfType<T>();
}
}

}


}

